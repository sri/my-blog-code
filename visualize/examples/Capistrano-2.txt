module Capistrano
  class ServerDefinition
    def initialize
    def <=>
    def eql?
    def hash
    def to_s
  class Command
    def self.process
    def initialize
    def process!
    def stop!
    def logger
    def open_channels
    def replace_placeholders
    def extract_environment
  class Logger
    def initialize
    def close
    def log
    def important
    def info
    def debug
    def trace
  class Upload
    def self.process
    def initialize
    def process!
    def logger
    def setup_sftp
    def check_status
    def running?
    def failed!
    def completed!
  module Version
    def self.check
  class Callback
    def initialize
    def applies_to?
  class ProcCallback
    def call
  class TaskCallback
    def initialize
    def call
  class SSH
    module Server
      def self.apply_to
    def self.connect
  class ExtensionProxy
    def initialize
    def method_missing
  def self.plugin
  def self.remove_plugin
  def self.configuration
  class Gateway
    def initialize
    def shutdown!
    def connect_to
    def logger
    def next_port
  class Shell
    class ReadlineFallback
      def self.readline
    def self.run
    def initialize
    def run!
    def read_and_execute
    def read_line
    def help
    def connect
    def exec
    def exec_tasks
    def exec_command
    def reader
    def setup
    def set_option
    def process_command
  class Configuration
    def initialize
    module Namespaces
      def self.included
      def initialize_with_namespaces
      def fully_qualified_name
      def desc
      def next_description
      def namespace
        class <<
      def task
        class <<
      def find_task
      def search_task
      def default_task
      def task_list
      def all_methods
      class Namespace
        def initialize
        def role
        def respond_to?
        def method_missing
    module Loading
      def self.included
      module ClassMethods
        def instance
        def instance=
      def initialize_with_loading
      def load
      def require
      def load_from_file
      def find_file_in_load_path
    module Callbacks
      def self.included
      def initialize_with_callbacks
      def execute_task_with_callbacks
      def before
      def after
      def on
      def trigger
      def find_hook
    module Connections
      def self.included
      class DefaultConnectionFactory
        def initialize
        def connect_to
      def initialize_with_connections
      def connect!
      def connection_factory
      def establish_connections_to
      def execute_on_servers
      def establish_connection_to
    module Execution
      def self.included
      def initialize_with_execution
      def transaction?
      def transaction
      def on_rollback
      def current_task
      def execute_task
      def find_and_execute_task
      def rollback!
      def push_task_call_frame
      def pop_task_call_frame
    module Roles
      def self.included
      def initialize_with_roles
      def role
    module Variables
      def self.included
      def set
      def unset
      def exists?
      def reset!
      def fetch
      def []
      def initialize_with_variables
      def respond_to_with_variables?
      def method_missing_with_variables
    module Servers
      def find_servers_for_task
      def find_servers
      def server_list_from
      def role_list_from
    module Actions
      module FileTransfer
        def put
        def get
      module Inspect
        def stream
        def capture
      module Invocation
        def self.included
        module ClassMethods
        def invoke_command
        def run
        def sudo
        def sudo_behavior_callback
  class CLI
    def initialize
    module Execute
      def self.included
      module ClassMethods
        def execute
      def execute!
      def execute_requested_actions
      def set_pre_vars
      def load_recipes
      def instantiate_configuration
      def handle_error
    module UI
      def self.included
      module ClassMethods
        def ui
        def password_prompt
    module Options
      def self.included
      module ClassMethods
        def parse
      def option_parser
      def parse_options!
      def extract_environment_variables!
      def look_for_default_recipe_file!
      def default_sysconf
      def default_dotfile
      def sysconf_directory
      def home_directory
    module Help
      def self.included
      def execute_requested_actions_with_help
      def task_list
      def explain_task
      def long_help
      def format_text
      def output_columns
  class TaskDefinition
    def initialize
    def fully_qualified_name
    def description
    def brief_description
  class Error
  class CaptureError
  class ConnectionError
  class UploadError
  class NoSuchTaskError
  class CommandError
  module Deploy
    module Strategy
      def self.new
      class RemoteCache
        def deploy!
        def repository_cache
        def update_repository_cache
        def copy_repository_cache
      class Export
        def command
      class Checkout
        def command
      class Base
        def initialize
        def deploy!
        def check!
        def method_missing
        def logger
        def revision
      class Copy
        def deploy!
        def check!
        def destination
        def copy_strategy
        def command
        def filename
        def tmpdir
        def remote_filename
        def compression
        def compression_extension
        def compress
        def decompress
      class Remote
        def deploy!
        def check!
        def scm_run
        def command
        def mark
    module SCM
      def self.new
      class Perforce
        def head
        def checkout
        def sync
        def export
        def diff
        def log
        def query_revision
        def handle_data
        def authentication
        def p4_sync
        def p4client
        def p4port
        def p4user
        def p4passwd
        def rev_no
      class Bzr
        def head
        def checkout
        def sync
        def export
        def diff
        def log
        def query_revision
        def revswitch
      class Subversion
        def head
        def checkout
        def sync
        def export
        def diff
        def log
        def query_revision
        def handle_data
        def authentication
        def verbose
      class Base
        class <<
          def default_command
        class LocalProxy
          def initialize
          def method_missing
        def initialize
        def local
        def local?
        def head
        def checkout
        def sync
        def diff
        def log
        def query_revision
        def handle_data
        def command
        def variable
        def logger
        def default_command
        def scm
        def repository
      class Darcs
        def head
        def checkout
        def sync
        def export
        def diff
        def log
        def query_revision
        def verbose
    class LocalDependency
      def initialize
      def command
      def or
      def pass?
      def find_in_path
    class Dependencies
      def initialize
      def check
      def remote
      def local
      def each
      def pass?
    class RemoteDependency
      def initialize
      def directory
      def writable
      def command
      def gem
      def or
      def pass?
      def message
      def try
def depend
